// https://www.acmicpc.net/problem/11055 가장 큰 증가 부분 수열

#include<stdio.h>

int N;
int arNum[1001] = { 0, };
int d[1001] = { 0, };			// 0 ~ i 까지의 숫자를 고려할 때, 증가수열 최대 합
int max = 0;


int dp(int n)
{
	if (d[n] != 0)
		return d[n];

	if (n == 0)
	{
		d[n] = arNum[n];
	}
	else
	{
		int tmp_max = 0;		// 이전 값들 중 최대 합
		int tmp_ret = 0;		// 이전 값들 각각의 값

		// 이전 값들에 대해 d[] 들을 살펴보고, 가장 큰 합에 대해 누적한다.
		for (int i = n - 1; i >= 0; i--)
		{
			if (arNum[i] < arNum[n])
			{
				tmp_ret = dp(i);

				if (tmp_max < tmp_ret)
				{
					tmp_max = tmp_ret;
				}
			}
		}

		d[n] = tmp_max + arNum[n];
	}

	// 만약 증가수열이 만들어지지 않는다면, 자기 자신만으로 수열을 만들게 된다.
	if (d[n] == 0)
		d[n] = arNum[n];

	// 최종 가장 큰 합 값 갱신
	if (d[n] > max)
		max = d[n];

	return d[n];
}

int main()
{
	scanf("%d", &N);

	for (int i = 0; i < N; i++)
	{
		scanf("%d", &arNum[i]);
	}

	for (int i = 0; i < N; i++)
	{
		dp(i);
	}

	printf("%d", max);

	return 0;
}
